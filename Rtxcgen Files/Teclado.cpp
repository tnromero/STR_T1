// Teclado.cpp - Generated by VisualRTXC

#include "kcounter.h"
#include "ktask.h"
#include "rtxcapi.h"
#include "kmutx.h"
#include "kproject.h"
#include "rtxcapi.h"
#include "rtxcstdio.h"
#include "objetos.h"
#include "graphics.h"
#include "Util.h"
#include <time.h>

// Variaveis globais
extern quadrilatero player1;
extern quadrilatero player2;
extern bool quit;

void task_Teclado(void);

void task_Teclado(void)
{
	while(1)
	{
		// Checar STDIN
		if(rtxc_ckinput())
		{
			// q - quit
			if(GetKeyState(81) & 0x8000)
			{
				quit=true;
			}
			// w 87 e 119
			if(GetKeyState(87) & 0x8000)
			{
				KS_TestMutxW(M_P1);
				if(player1.v1.y-INC_PLAYER>TOPO)
				{
					player1.v1.y-=INC_PLAYER;
					player1.v2.y-=INC_PLAYER;
				}
				else
				{
					player1.v2.y-=(player1.v1.y-TOPO-1);
					player1.v1.y-=(player1.v1.y-TOPO-1);
				}
				KS_ReleaseMutx(M_P1);
			}
			// s 83 e 115
			if(GetKeyState(83) & 0x8000)
			{
				KS_TestMutxW(M_P1);
				if(player1.v2.y+INC_PLAYER<INFERIOR)
				{
					player1.v1.y+=INC_PLAYER;
					player1.v2.y+=INC_PLAYER;
				}
				else
				{
					player1.v1.y+=(INFERIOR - player1.v2.y -1);
					player1.v2.y+=(INFERIOR - player1.v2.y -1);
				}
				KS_ReleaseMutx(M_P1);
			}
			// i 73 e 105
			if(GetKeyState(73) & 0x8000)
			{
				KS_TestMutxW(M_P2);
				if(player2.v1.y-INC_PLAYER>TOPO)
				{
					player2.v1.y-=INC_PLAYER;
					player2.v2.y-=INC_PLAYER;
				}
				else
				{
					player2.v2.y-=(player2.v1.y-TOPO-1);
					player2.v1.y-=(player2.v1.y-TOPO-1);
				}
				KS_ReleaseMutx(M_P2);
			}
			// k 75 e 107
			if(GetKeyState(75) & 0x8000)
			{
				KS_TestMutxW(M_P2);
				if(player2.v2.y+INC_PLAYER<INFERIOR)
				{
					player2.v1.y+=INC_PLAYER;
					player2.v2.y+=INC_PLAYER;
				}
				else
				{
					player2.v1.y+=(INFERIOR - player2.v2.y -1);
					player2.v2.y+=(INFERIOR - player2.v2.y -1);
				}
				KS_ReleaseMutx(M_P2);
			}
		}
		KS_SleepTask(SYSTIMER, (TICKS)100/CLKTICK);
	}
	KS_TerminateTask(SELFTASK);
}
