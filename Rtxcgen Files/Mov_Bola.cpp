// Mov_Bola.cpp - Generated by VisualRTXC

#include "kcounter.h"
#include "ktask.h"
#include "rtxcapi.h"
#include "kproject.h"
#include "objetos.h"
#include "graphics.h"
#include <time.h>

extern circulo bola;
extern quadrilatero player1;
extern quadrilatero player2;

void task_Mov_Bola(void);

void task_Mov_Bola(void)
{
	int incX, incY;
	srand(time(NULL));
	incX=(rand()%5)+1;
	incY=(rand()%5)+1;
	while(1)
	{
		// X
		if(incX>0) {
			if(	(bola.v.y+bola.raio<=player2.v2.y && bola.v.y-bola.raio>=player2.v1.y) 
					&& (bola.v.x+bola.raio+incX>=player2.v1.x) ) {
				
				if(bola.v.x+bola.raio+incX==player2.v1.x) {
					bola.v.x+incX;
				} else {
					while(bola.v.x+bola.raio<player2.v1.x) {
						bola.v.x++;
					}	
				}
				incX=-incX;
		
			}else if(bola.v.x+bola.raio+incX<594) {
				bola.v.x+=incX;
		
			} else {
				while(bola.v.x+bola.raio<594-1) {
					bola.v.x++;
				}
				incX=-incX;
			}
		} else {
		
			if(	(bola.v.y+bola.raio<=player1.v2.y && bola.v.y-bola.raio>=player1.v1.y) 
					&& (bola.v.x-bola.raio+incX<=player1.v2.x) ) {
				
				if(bola.v.x-bola.raio+incX==player2.v2.x) {
					bola.v.x+incX;
				} else {
					while(bola.v.x-bola.raio>player2.v1.x) {
						bola.v.x--;
					}	
				}
				incX=-incX;
		
			}else if(bola.v.x-bola.raio+incX>5) {
				bola.v.x+=incX;
		
			} else {
				while(bola.v.x-bola.raio>5+1) {
					bola.v.x--;
				}
				incX=-incX;
			}
		}
		
		// Y
		if(incY>0) {
			if(bola.v.y+bola.raio+incY<394) {
				bola.v.y+=incY;
			} else {
				while(bola.v.y+bola.raio<394-1) {
					bola.v.y++;
				}
				incY=-incY;
			}
		} else {
			if(bola.v.y-bola.raio+incY>5) {
				bola.v.y+=incY;
			} else {
				while(bola.v.y-bola.raio>5+1) {
					bola.v.y--;
				}
				incY=-incY;
			}
		}
		KS_SleepTask(SYSTIMER, (TICKS)100/CLKTICK);
	}
	KS_TerminateTask(SELFTASK);
}
