// Principal.cpp - Generated by VisualRTXC

#include "kcounter.h"
#include "kmutx.h"
#include "ktask.h"
#include "kthread.h"
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include "rtxcapi.h"
#include "kproject.h"
#include "objetos.h"
#include "graphics.h"

tabuleiro t;
quadrilatero player1;
quadrilatero player2;
circulo bola;
bool quit = false;

void task_Principal(void);

void task_Principal(void)
{
	
	int key=0;
	//quadrado q;
	int GraphDriver = DETECT,GraphMode = 0;
	int i=0; 
	
	
	initgraph(&GraphDriver, &GraphMode, "", 607, 600);
	
	/*q.filltype=SOLID_FILL;
	q.fillcolor=3;
	q.x=300;
	q.y=300;
	q.width=100;
	q.height=100;		 */
	
	while(!quit)
	{
		// Verifica se ocorreu um evento
		if(kbhit())
		{
			key = getch();
			switch(key)
			{
				// q
				case 81:
				case 113:
					quit=true;
					break;
				// // w
				case 87:
				case 119:
					KS_TestMutxW(M_P1);
					if(player1.v1.y-1>5) {
						player1.v1.y--;
						player1.v2.y--;
					}
					KS_ReleaseMutx(M_P1);
					break;
				// s
				case 83:
				case 115:
					KS_TestMutxW(M_P1);
					if(player1.v2.y+1<394) {
						player1.v1.y++;
						player1.v2.y++;
					}
					KS_ReleaseMutx(M_P1);
					break;
				// i
				case 73:
				case 105:
					KS_TestMutxW(M_P2);
					if(player2.v1.y-1>5) {
						player2.v1.y--;
						player2.v2.y--;
					}
					KS_ReleaseMutx(M_P2);
					break;
				// k
				case 75:
				case 107:
					KS_TestMutxW(M_P2);
					if(player2.v2.y+1<394) {
						player2.v1.y++;
						player2.v2.y++;
					}
					KS_ReleaseMutx(M_P2);
					break;
			}
		}
		else
		{
		}
		KS_ScheduleThread(DISPLAY);
		/*setbkcolor(BLACK);
		cleardevice();
		setfillstyle(q.filltype, q.fillcolor);
		bar(	(int)q.x+i - q.width/2,
				(int)q.y+i - q.height/2,
				(int)q.x+i + q.width/2,
				(int)q.y+i + q.height/2);
		i++;*/
		
		
		KS_SleepTask(SYSTIMER, (TICKS)100/CLKTICK);
	}
	closegraph();
	KS_TerminateTask(SELFTASK);
}
